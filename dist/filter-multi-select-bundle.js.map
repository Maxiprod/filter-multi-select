{"version":3,"file":"filter-multi-select-bundle.js","sources":["../src/FilterMultiSelect.ts","../src/filter-multi-select.ts"],"sourcesContent":["/*! \n *  Multiple select dropdown with filter jQuery plugin.\n *  Copyright (C) 2022  Andrew Wagner  github.com/andreww1011\n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n * \n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n * \n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n *  USA\n */\nimport $, { map } from 'jquery';\n\nconst NULL_OPTION = new class implements Option {\n    initialize(): void {}\n    select(): void {}\n    delete(): void {}\n    deselect(): void {}\n    enable(): void {}\n    disable(): void {}\n    isSelected(): boolean {return false;}\n    isDisabled(): boolean {return true;}\n    getListItem(): HTMLElement {return document.createElement('div');}\n    getSelectedItemBadge(): HTMLElement {return document.createElement('div');}\n    getLabel(): string {return 'NULL_OPTION'}\n    getValue(): string {return 'NULL_OPTION'}\n    show(): void {}\n    hide(): void {}\n    isHidden(): boolean {return true;}\n    focus(): void {}\n    activate(): void {}\n    deactivate(): void {}\n}  \n\ninterface Option {\n    initialize(): void;\n    select(): void;\n    delete(): void;\n    deselect(): void;\n    enable(): void;\n    disable(): void;\n    isSelected(): boolean;\n    isDisabled(): boolean;\n    getListItem(): HTMLElement;\n    getSelectedItemBadge(): HTMLElement;\n    getLabel(): string;\n    getValue(): string;\n    show(): void;\n    hide(): void;\n    isHidden(): boolean;\n    focus(): void;\n    activate(): void;\n    deactivate(): void;\n}\n\ninterface SelectAllOption extends Option {\n    markSelectAll(): void;\n    markSelectPartial(): void;\n    markSelectAllNotDisabled(): void;\n    markDeselect(): void;\n}\n\nexport { Option };\n\nconst DEBUG = false;\n\nexport default class FilterMultiSelect {\n\n    private static SingleOption = class implements Option {\n        protected div: HTMLDivElement;\n        protected checkbox: HTMLInputElement;\n        protected labelFor: HTMLLabelElement;\n        protected closeButton: HTMLButtonElement;\n        protected selectedItemBadge: HTMLSpanElement;\n        protected fms: FilterMultiSelect;\n        protected active: boolean;\n        protected disabled: boolean;\n        private initiallyChecked: boolean;\n    \n        constructor(fms: FilterMultiSelect, row: number, name:string, label: string, value: string, checked: boolean, disabled: boolean) {\n            this.fms = fms;\n            this.div = document.createElement('div');\n            this.checkbox = document.createElement('input');\n            this.checkbox.type = 'checkbox';\n            let id: string = name + '-' + row.toString();\n            let nchbx: string = id + '-chbx';\n            this.checkbox.id = nchbx;\n            this.checkbox.name = name;\n            this.checkbox.value = value;\n            this.initiallyChecked = checked;\n            this.checkbox.checked = false;\n            this.checkbox.disabled = disabled;\n            this.labelFor = document.createElement('label');\n            this.labelFor.htmlFor = nchbx;\n            this.labelFor.textContent = label;\n            this.div.append(this.checkbox, this.labelFor);\n            this.closeButton = document.createElement('button');\n            this.closeButton.type = 'button';\n            //this.closeButton.innerHTML = '&times;';\n            this.selectedItemBadge = document.createElement('span');\n            this.selectedItemBadge.setAttribute('data-id',id);\n            this.selectedItemBadge.textContent = label;\n            this.selectedItemBadge.append(this.closeButton);\n            this.disabled = disabled;\n            this.active = true;\n        }\n    \n        private log(m: string, e: Event):void {\n            if (DEBUG) {\n                console.log(e.timeStamp + \" - \" + m + \":\" + e.type + \":\" + e.target)\n            }\n        }\n    \n        public initialize(): void {\n            this.div.className = 'dropdown-item custom-control';\n            this.checkbox.className = 'custom-control-input custom-checkbox';\n            this.labelFor.className = 'custom-control-label';\n            this.selectedItemBadge.className = 'item';\n            if (this.initiallyChecked) {\n                this.selectNoDisabledCheck();\n            }\n            if (this.disabled) {\n                this.setDisabledViewState();\n            }\n            this.fms.update();\n            this.checkbox.addEventListener('change', (e: Event) => {\n                e.stopPropagation();\n                if (this.isDisabled() || this.fms.isDisabled()) {\n                    e.preventDefault();\n                    return;\n                }\n                if (DEBUG) {\n                    this.log('checkbox',e);\n                }\n                \n                if (this.isSelected()) {\n                    this.select();\n                } else {\n                    this.deselect();\n                }\n                let numShown = this.fms.showing.length;\n                if (numShown === 1) {\n                    this.fms.clearFilterAndRefocus();\n                }\n            }, true);\n            this.checkbox.addEventListener('keydown', (e: KeyboardEvent) => {\n                if (DEBUG) {\n                    this.log('checkbox',e);\n                }\n                switch (e.key) {\n                    case \"Enter\":\n                        e.preventDefault();\n                        this.checkbox.dispatchEvent(new MouseEvent('click'));\n                        break;\n                    default:\n                        break;\n                }\n            }, true)\n            this.closeButton.addEventListener('click', (e: Event) => {\n                if (this.isDisabled() || this.fms.isDisabled()) return;\n                if (DEBUG) {\n                    this.log('closeButton',e);\n                }\n                this.deselect();\n                if (!this.fms.isClosed()) {\n                    this.fms.refocusFilter();\n                }\n            }, true);\n            this.checkbox.tabIndex = -1;\n            this.closeButton.tabIndex = -1;\n        }\n    \n        public select(): void {\n            if (this.isDisabled()) return;\n            this.selectNoDisabledCheck();\n            this.fms.update();\n        }\n\n        public delete(): void{\n            this.div.remove();\n            this.fms.update();\n        }\n\n        private selectNoDisabledCheck(): void {\n            if (!this.fms.canSelect() || !this.isActive()) return;\n            this.checkbox.checked = true;\n            this.fms.queueOption(this);\n            this.fms.dispatchSelectedEvent(this);\n        }\n    \n        public deselect(): void {\n            if (this.isDisabled()) return;\n            this.checkbox.checked = false;\n            this.fms.unqueueOption(this);\n            this.fms.dispatchDeselectedEvent(this);\n            this.fms.update();\n        }\n    \n        public enable(): void {\n            this.disabled = false;\n            this.setEnabledViewState();\n            this.fms.update();\n        }\n\n        private setEnabledViewState(): void {\n            this.checkbox.disabled = false;\n            this.selectedItemBadge.classList.remove('disabled');\n        }\n    \n        public disable(): void {\n            this.disabled = true;\n            this.setDisabledViewState();\n            this.fms.update();\n        }\n\n        private setDisabledViewState(): void {\n            this.checkbox.disabled = true;\n            this.selectedItemBadge.classList.add('disabled');\n        }\n    \n        public isSelected(): boolean {\n            return this.checkbox.checked;\n        }\n    \n        public isDisabled(): boolean {\n            return this.checkbox.disabled;\n        }\n    \n        public getListItem(): HTMLElement {\n            return this.div;\n        }\n    \n        public getSelectedItemBadge(): HTMLElement {\n            return this.selectedItemBadge;\n        }\n    \n        public getLabel(): string {\n            return this.labelFor.textContent;\n        }\n    \n        public getValue(): string {\n            return this.checkbox.value;\n        }\n    \n        public show(): void {\n            this.div.hidden = false;\n        }\n    \n        public hide(): void {\n            this.div.hidden = true;\n        }\n    \n        public isHidden(): boolean {\n            return this.div.hidden;\n        }\n\n        public focus(): void {\n            this.labelFor.focus();\n        }\n\n        isActive(): boolean {\n            return this.active;\n        }\n\n        public activate(): void {\n            this.active = true;\n            if (!this.disabled) {\n                this.setEnabledViewState();\n            }\n        }\n\n        public deactivate(): void {\n            this.active = false;\n            this.setDisabledViewState();\n        }\n    }\n\n    private static createOptions(fms: FilterMultiSelect, name: string, htmlOptions: Array<HTMLOptionElement>, jsOptions: Array<[label:string, value:string, selected?:boolean, disabled?:boolean]>): Array<Option> {\n        let htmloptions =  htmlOptions.map((o, i) => {\n            FilterMultiSelect.checkValue(o.value, o.label);\n            return new FilterMultiSelect.SingleOption(fms, i, name, o.label, o.value, o.defaultSelected, o.disabled);\n        });\n        let j = htmlOptions.length;\n        let jsoptions = jsOptions.map((o, i) => {\n            let label: string = o[0];\n            let value: string = o[1];\n            let selected: boolean = o[2];\n            let disabled: boolean = o[3];\n            FilterMultiSelect.checkValue(value, label);\n            return new FilterMultiSelect.SingleOption(fms, j+i, name, label, value, selected, disabled);\n\n        });\n        let opts = htmloptions.concat(jsoptions);\n        let counts: any = {};\n        opts.forEach((o) => {\n            let v: string = o.getValue();\n            if (counts[v] === undefined) {\n                counts[v] = 1;\n            } else {\n                throw new Error(\"Duplicate value: \" + o.getValue() + \" (\" + o.getLabel() + \")\");\n            }\n        });\n        return opts;\n    }\n\n    private static checkValue(value:string, label:string):void {\n        if (value === \"\") {\n            throw new Error(\"Option \" + label + \" does not have an associated value.\");\n        }\n    }\n\n    private static UnrestrictedSelectAllOption = class extends FilterMultiSelect.SingleOption implements SelectAllOption {\n        constructor(fms: FilterMultiSelect, name: string, label: string) {\n            super(fms,-1,name,label,'',false,false); //magic number\n            this.checkbox.indeterminate = false;\n        }\n\n        public markSelectAll(): void {\n            this.checkbox.checked = true;\n            this.checkbox.indeterminate = false;\n        }\n\n        public markSelectPartial(): void {\n            this.checkbox.checked = false;\n            this.checkbox.indeterminate = true;\n        }\n\n        public markSelectAllNotDisabled(): void {\n            this.checkbox.checked = true;\n            this.checkbox.indeterminate = true;\n        }\n\n        public markDeselect(): void {\n            this.checkbox.checked = false;\n            this.checkbox.indeterminate = false;\n        }\n\n        public select(): void {\n            if (this.isDisabled()) return;\n            this.fms.options.filter((o) => !o.isSelected())\n                .forEach((o) => o.select());\n            this.fms.update();\n        }\n\n        public delete(): void{\n            this.fms.update();\n        }\n\n        public deselect(): void {\n            if (this.isDisabled()) return;\n            this.fms.options.filter((o) => o.isSelected())\n                .forEach((o) => o.deselect());\n            this.fms.update();\n        }\n\n        public enable(): void {\n            this.disabled = false;\n            this.checkbox.disabled = false;\n        }\n    \n        public disable(): void {\n            this.disabled = true;\n            this.checkbox.disabled = true;\n        }\n    }\n\n    private static RestrictedSelectAllOption = class implements SelectAllOption {\n        private usao: SelectAllOption;\n        \n        constructor(fms: FilterMultiSelect, name: string, label: string) {\n            this.usao = new FilterMultiSelect.UnrestrictedSelectAllOption(fms,name,label);\n        }\n        \n        initialize(): void {this.usao.initialize();}\n        select(): void {}\n        delete(): void {}\n        deselect(): void {this.usao.deselect();}\n        enable(): void {}\n        disable(): void {}\n        isSelected(): boolean {return false;}\n        isDisabled(): boolean {return true;}\n        getListItem(): HTMLElement {return document.createElement('div');}\n        getSelectedItemBadge(): HTMLElement {return document.createElement('div');}\n        getLabel(): string {return 'RESTRICTED_SELECT_ALL_OPTION'}\n        getValue(): string {return 'RESTRICTED_SELECT_ALL_OPTION'}\n        show(): void {}\n        hide(): void {}\n        isHidden(): boolean {return true;}\n        focus(): void {}\n        markSelectAll(): void {}\n        markSelectPartial(): void {}\n        markSelectAllNotDisabled(): void {}\n        markDeselect(): void {}\n        activate(): void {}\n        deactivate(): void {}\n    }\n\n    public static EventType = {\n        SELECTED: \"optionselected\",\n        DESELECTED: \"optiondeselected\",\n    } as const;\n\n    private static createEvent(e: string, n: string, v: string, l: string): CustomEvent {\n        const event = new CustomEvent(e, {\n            detail: {\n                name: n,\n                value: v,\n                label: l\n            },\n            bubbles: true,\n            cancelable: true,\n            composed: false,\n        });\n        return event;\n    }\n\n    public options: Array<Option>;\n    private selectAllOption: SelectAllOption;\n    private div: HTMLDivElement;\n    private skeleton: HTMLDivElement;\n    public skeletonLines: Array<HTMLDivElement>;\n    private viewBar: HTMLDivElement;\n    private placeholder: HTMLSpanElement;\n    private selectedItems: HTMLSpanElement;\n    private dropDown: HTMLDivElement;\n    private filter: HTMLDivElement;\n    private filterInput: HTMLInputElement;\n    private clearButton: HTMLButtonElement;\n    private items: HTMLDivElement;\n    private caseSensitive: boolean;\n    private disabled: boolean;\n    private allowEnablingAndDisabling: boolean;\n    private filterText: string;\n    private showing: Array<number>;\n    private itemFocus: number;\n    private name: string;\n    private label: HTMLSpanElement;\n    private maxNumSelectedItems: number;\n    private numSelectedItems: number;\n    private selectionCounter: HTMLSpanElement;\n    private isSearchBox: boolean;\n    private lazyLoadingFunction: Function;\n    private lastId: number;\n    private lastLoadedAmount: number;\n    private readonly maxLazyLoadedAmount: number;\n        \n\n    constructor (selectTarget: JQuery<HTMLElement>, args: Args) {        \n        let t = selectTarget.get(0);\n        if (!(t instanceof HTMLSelectElement)) {\n            throw new Error(\"JQuery target must be a select element.\");\n        }\n        let select: HTMLSelectElement = t;\n        let name: string = select.name;\n        if (!name) {\n            throw new Error(\"Select element must have a name attribute.\");\n        }\n        this.name = name;\n        let array: Array<HTMLOptionElement> = selectTarget.find('option').toArray();\n        this.options = FilterMultiSelect.createOptions(this, name, array, args.items);\n        this.lastId = this.options.length;\n        this.lastLoadedAmount = -1;\n        this.maxLazyLoadedAmount = 40;\n\n        // restrict selection\n        this.numSelectedItems = 0;\n        this.maxNumSelectedItems =  !select.multiple ? 1 : \n                                    args.selectionLimit > 0 ? args.selectionLimit :\n                                    parseInt(select.getAttribute('multiple')) > 0 ? parseInt(select.getAttribute('multiple')) :\n                                    0; //magic number \n        const numOptions: number = this.options.length;\n        const restrictSelection: boolean = this.maxNumSelectedItems > 0 && this.maxNumSelectedItems < numOptions;\n        this.maxNumSelectedItems = restrictSelection ? this.maxNumSelectedItems : Math.max(numOptions, this.maxLazyLoadedAmount) + 1;  //magic number\n        this.selectAllOption = restrictSelection ? \n                new FilterMultiSelect.RestrictedSelectAllOption(this, name, args.selectAllText) : \n                new FilterMultiSelect.UnrestrictedSelectAllOption(this, name, args.selectAllText);\n\n        // filter box\n        this.filterInput = document.createElement('input');\n        this.filterInput.type = 'text';\n        this.filterInput.placeholder = args.filterText;\n        this.clearButton = document.createElement('button');\n        this.clearButton.type = 'button';\n        this.clearButton.innerHTML = '&times;';\n        this.filter = document.createElement('div');\n        this.filter.append(this.filterInput, this.clearButton);\n\n        // items\n        this.items = document.createElement('div');\n        this.items.append(this.selectAllOption.getListItem());\n        this.options.forEach((o: Option) => this.items.append(o.getListItem()));\n        \n\n        this.skeleton = document.createElement('div');\n        this.skeleton.className = 'dropdown-item';\n        this.skeleton.hidden = true;\n\n        // dropdown list\n        this.dropDown = document.createElement('div');\n        this.dropDown.append(this.filter, this.skeleton, this.items);\n\n        // placeholder\n        this.placeholder = document.createElement('span');\n        this.placeholder.textContent = args.placeholderText;\n        this.selectedItems = document.createElement('span');\n\n        // label\n        this.label = document.createElement('span');\n        this.label.textContent = args.labelText;\n        let customLabel: boolean = args.labelText.length != 0;\n        if (!customLabel) {\n            this.label.hidden = true;\n        }\n\n        // selection counter\n        this.selectionCounter = document.createElement('span');\n        this.selectionCounter.hidden = !restrictSelection;\n\n        // viewbar\n        this.viewBar = document.createElement('div');\n        this.viewBar.append(this.label, this.selectionCounter, this.placeholder, this.selectedItems);\n\n        this.div = document.createElement('div');\n        this.div.id = select.id;\n        this.div.append(this.viewBar, this.dropDown);\n\n        this.caseSensitive = args.caseSensitive;\n        this.disabled = select.disabled;\n        this.allowEnablingAndDisabling = args.allowEnablingAndDisabling;\n        this.filterText = '';\n        this.showing = new Array<number>();\n        this.itemFocus = -2; //magic number\n\n        this.isSearchBox = false;\n\n        this.initialize();\n    }\n\n    private initialize(): void {\n        this.skeletonLines = new Array(5)\n        for (let i =0; i< 5; i++){\n            let skeletonLine = document.createElement('div');\n            skeletonLine.className = 'p-skeleton p-component';\n            this.skeletonLines[i] = skeletonLine;\n        }\n        this.skeletonLines.forEach(o => this.skeleton.append(o));\n\n        this.options.forEach(o => o.initialize());\n        this.selectAllOption.initialize();\n        \n        \n        this.filterInput.className = 'form-control';\n        this.clearButton.tabIndex = -1;\n\n        this.filter.className = 'filter dropdown-item'\n        this.items.className = 'items dropdown-item';\n        this.dropDown.className = 'dropdown-menu';\n\n        this.placeholder.className = 'placeholder';\n        this.selectedItems.className = 'selected-items';\n        this.viewBar.className = 'viewbar form-control dropdown-toggle';\n        this.label.className = 'col-form-label mr-2 text-dark';\n        this.selectionCounter.className = 'mr-2';\n\n        this.div.className = 'filter-multi-select dropdown';\n        if (this.maxNumSelectedItems > 1) {\n            let v: string = this.maxNumSelectedItems >= this.options.length ? \"\" : this.maxNumSelectedItems.toString();\n            this.div.setAttribute('multiple',v);\n        } else {\n            this.div.setAttribute('single',\"\");\n        }\n\n        if (this.isDisabled()) {\n            this.disableNoPermissionCheck();\n        }\n\n        this.attachDropdownListeners();\n        this.attachViewbarListeners();\n        \n        this.closeDropdown();\n    }\n\n    private log(m: string, e: Event):void {\n        if (DEBUG) {\n            console.log(e.timeStamp + \" - \" + m + \":\" + e.type + \":\" + e.target);\n        }\n    }\n\n    private attachDropdownListeners(): void {\n        this.filterInput.addEventListener('keyup',(e: KeyboardEvent) => {\n            if (DEBUG) {\n                this.log('filterInput',e);\n            }\n            e.stopImmediatePropagation();\n            this.updateDropdownList();\n            let numShown = this.showing.length;\n            switch(e.key) {\n                case \"Enter\":\n                    if (numShown >= 1) {\n                        let o: Option = this.options[this.showing[0]]; //magic number\n                        if (!o.isDisabled()) {\n                            if (o.isSelected()) {\n                                o.deselect();\n                            } else {\n                                o.select();\n                            }\n                            this.clearFilterAndRefocus();\n                        }\n                    }\n                    e.preventDefault();\n                    break;\n                case \"Escape\":\n                    if (this.filterText.length > 0) {\n                        this.clearFilterAndRefocus();\n                    } else {\n                        this.closeDropdown();\n                    }\n                    break;\n                default:\n                    break;\n            }   \n        }, true);\n        this.clearButton.addEventListener('click', (e: MouseEvent) => {\n            if (DEBUG) {\n                this.log('clearButton',e);\n            }\n            e.stopImmediatePropagation();\n            let text = this.filterInput.value;\n            if (text.length > 0) {\n                this.clearFilterAndRefocus();\n            } else {\n                this.closeDropdown();\n            }\n        }, true);\n    }\n\n    public setLastLoadedAmount(value: number){\n        this.lastLoadedAmount = value;\n    }\n\n    private onFiltro(text: string, selector: FilterMultiSelect, data: {Valor: string, Label: string}[]): void{\n        // remove opções antigas não selecionadas\n        for (let i = selector.options.length - 1; i >= 0; i--) {\n            let o = selector.options[i].getValue();\n            if (!selector.isOptionSelected(o)) {\n                selector.deleteOption(o);\n            }\n        }\n\n        selector.setLastLoadedAmount(data.length);\n        // Adiciona novas opções\n        for (let i = 0; i < data.length; i++) {\n            selector.addOption(data[i].Valor, data[i].Label);\n        }\n\n        // Filtra com as novas opções\n        selector.filtrar(text);\n    }\n\n    private filtrarAsync(oldText: string):void {\n        let text = this.filterInput.value;\n        if (oldText != text) {\n            return;\n        }\n\n        this.lazyLoadingFunction({texto: text, itensPorLoad: this.maxLazyLoadedAmount}, this, this.onFiltro);\n    }\n\n    public filtrar (text: string): void{\n        let shouldFilter = !this.isSearchBox || text.length > 0;\n        let showing = new Array<number>();\n        this.options.forEach((o: Option, i: number) => {\n            let label = this.caseSensitive ? o.getLabel() : o.getLabel().toLowerCase();\n            let texto = this.caseSensitive ? text : text.toLowerCase();\n            if (label.indexOf(texto) !== -1 && shouldFilter) { //magic number \n                o.show();\n                showing.push(i);\n            } else {\n                o.hide();\n            }\n        });\n\n        this.setLoaded();\n        \n        this.filterText = text;\n        this.showing = showing;\n    }\n\n    private updateDropdownList(): void {\n        let text = this.filterInput.value;\n\n        if (text.length > 0 || this.isSearchBox) {\n            this.selectAllOption.hide();\n        } else {\n            this.selectAllOption.show();\n        }\n        let showing = new Array<number>();\n\n        if (this.isSearchBox){\n            if (text.length >= 3 && this.filterText == text){\n                return;\n            }\n\n            this.options.forEach((o: Option) => {\n                o.hide();\n            });\n\n            if (text.length < 3 || this.filterText.length > text.length){\n                this.lastLoadedAmount = -1;\n            }\n\n            if (text.length < 3){\n                this.filterText = text;\n                this.showing = showing;\n                return;\n            }\n\n            if (this.lastLoadedAmount >= 0 && this.lastLoadedAmount < (this.maxLazyLoadedAmount * 0.8)){\n                this.filtrar(text);\n                return;\n            }\n\n            this.setLoading();\n\n            setTimeout(() => this.filtrarAsync(text), 500);\n            \n            this.filterText = text;\n            this.showing = showing;\n            return;\n        }\n        \n        this.filtrar(text);\n    }\n\n    \n\n    private setLoading(): void {\n        this.skeleton.hidden = false;\n        this.skeletonLines.forEach(o => o.style.width = (Math.random() * 60 + 40) + '%');\n    }\n\n    private setLoaded(): void {\n        this.skeleton.hidden = true;\n    }\n\n    private clearFilterAndRefocus(): void {\n        if (DEBUG) {\n            console.log('clear filter');\n        }\n        this.lastLoadedAmount = -1;\n        this.filterInput.value = '';\n        this.updateDropdownList();\n        this.refocusFilter();\n    }\n\n    private refocusFilter() {\n        if (DEBUG) {\n            console.log('refocus filter');\n        }\n        this.filterInput.focus();\n        this.itemFocus = -2; //magic number\n    }\n\n    private attachViewbarListeners(): void {\n        this.viewBar.addEventListener('click',(e) => {\n            if (DEBUG) {\n                this.log('viewBar',e);\n            }\n            if (this.isClosed()) {\n                this.openDropdown();\n            } else {\n                this.closeDropdown();\n            }\n        });\n    }\n\n    public isClosed(): boolean {\n        return !this.dropDown.classList.contains('show');\n    }\n\n    private setTabIndex(): void {\n        if (this.isDisabled()) {\n            this.div.tabIndex = -1;\n        } else {\n            if (this.isClosed()) {\n                this.div.tabIndex = 0;\n            } else {\n                this.div.tabIndex = -1;\n            }\n        }\n    }\n\n    private closeDropdown(): void {\n        if (DEBUG) {\n            console.log('close');\n        }\n        document.removeEventListener('keydown', this.documentKeydownListener, true);\n        document.removeEventListener('click', this.documentClickListener, true);\n        this.dropDown.classList.remove('show');\n        setTimeout(() => {\n            this.setTabIndex();    \n        }, 100); //magic number\n        this.div.addEventListener('mousedown', this.fmsMousedownListener, true);\n        this.div.addEventListener('focus', this.fmsFocusListener);\n    }\n\n    private documentKeydownListener = (e: KeyboardEvent) => {\n        if (DEBUG) {\n            this.log('document',e);\n            console.log(e.key);\n        }\n        switch(e.key) {\n            case \"Tab\":\n                e.stopPropagation();\n                this.closeDropdown();\n                break;\n            case \"ArrowUp\":\n                e.stopPropagation();\n                e.preventDefault();\n                if (DEBUG) {\n                    console.log(\"up\");\n                }\n                this.decrementItemFocus();\n                this.focusItem();\n                break;\n            case \"ArrowDown\":\n                e.stopPropagation();\n                e.preventDefault();\n                if (DEBUG) {\n                    console.log(\"down\");\n                }\n                this.incrementItemFocus();\n                this.focusItem();\n                break;\n            case \"Enter\":\n            case \"Spacebar\":\n            case \" \":\n                //swallow to allow checkbox change to work\n                break;\n            default:\n                //send key to filter\n                this.refocusFilter();\n                break;\n        }\n    };\n\n    private incrementItemFocus(): void {\n        if (this.itemFocus >= this.options.length - 1) return; \n        let i = this.itemFocus;\n        do {\n            i++;\n        } while ((i == -1 && (this.selectAllOption.isDisabled() || this.selectAllOption.isHidden())) || //magic number\n            (i >= 0 && i < this.options.length && (this.options[i].isDisabled() || this.options[i].isHidden())));\n        this.itemFocus = i > this.options.length - 1 ? this.itemFocus : i;\n        if (DEBUG) {\n            console.log(\"item focus: \"+ this.itemFocus);\n        }\n    }\n\n    private decrementItemFocus(): void {\n        if (this.itemFocus <= -2) return; //magic number\n        let i = this.itemFocus;\n        do {\n            i--;\n            \n        } while ((i == -1 && (this.selectAllOption.isDisabled() || this.selectAllOption.isHidden())) ||\n            (i >= 0 && (this.options[i].isDisabled() || this.options[i].isHidden())) &&\n            i > -2); //magic number\n        this.itemFocus = i; \n        if (DEBUG) {\n            console.log(\"item focus: \"+ this.itemFocus);\n        }\n    }\n\n    private focusItem(): void {\n        if (this.itemFocus === -2) {\n            this.refocusFilter();\n        } else if (this.itemFocus === -1) {\n            this.selectAllOption.focus();\n        } else {\n            this.options[this.itemFocus].focus();\n        }\n    }\n\n    private documentClickListener = (e: MouseEvent) => {\n        if (DEBUG) {\n            this.log('document',e);\n        }\n        if (this.div !== e.target && !this.div.contains(<Node>e.target)) {\n            this.closeDropdown();\n        }\n    };\n\n    private fmsFocusListener: EventListener = (e: FocusEvent) => {\n        if (DEBUG) {\n            this.log('div',e);\n        }\n        e.stopPropagation();\n        e.preventDefault();\n        this.viewBar.dispatchEvent(new MouseEvent('click'));\n    };\n\n    private fmsMousedownListener: EventListener = (e: MouseEvent) => {\n        if (DEBUG) {\n            this.log('div',e);\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    private openDropdown() {\n        if (this.disabled) return;\n        if (DEBUG) {\n            console.log('open');\n        }\n        this.div.removeEventListener('mousedown', this.fmsMousedownListener, true);\n        this.div.removeEventListener('focus', this.fmsFocusListener);\n        this.dropDown.classList.add('show');\n        this.setTabIndex();\n        this.clearFilterAndRefocus();\n        document.addEventListener('keydown', this.documentKeydownListener, true);\n        document.addEventListener('click', this.documentClickListener, true);\n    }\n\n    private queueOption(option: Option): void {\n        if (this.options.indexOf(option) == -1) return;\n        this.numSelectedItems++;\n        $(this.selectedItems).append(option.getSelectedItemBadge());\n    }\n\n    private unqueueOption(option: Option): void {\n        if (this.options.indexOf(option) == -1) return;\n        this.numSelectedItems--;\n        $(this.selectedItems).children('[data-id=\"' + option.getSelectedItemBadge().getAttribute('data-id') + '\"]').remove();\n    }\n\n    private update(): void {\n        if (this.areAllSelected()) {\n            this.selectAllOption.markSelectAll();\n            this.placeholder.hidden = true;\n        } else if (this.areSomeSelected()) {\n            if (this.areOnlyDeselectedAlsoDisabled()) {\n                this.selectAllOption.markSelectAllNotDisabled();\n                this.placeholder.hidden = true;\n            } else {\n                this.selectAllOption.markSelectPartial();\n                this.placeholder.hidden = true;\n            }\n        } else {\n            this.selectAllOption.markDeselect();\n            this.placeholder.hidden = false;\n        }\n        if (this.areAllDisabled()) {\n            this.selectAllOption.disable();\n        } else {\n            this.selectAllOption.enable();\n        }\n        if (!this.canSelect()) {\n            this.options\n                .filter((o) => !o.isSelected())\n                .forEach((o) => o.deactivate());\n        } else {\n            this.options\n                .filter((o) => !o.isSelected())\n                .forEach((o) => o.activate());\n        }\n        this.updateSelectionCounter();\n    }\n\n    private areAllSelected(): boolean {\n        return this.options\n                .map((o) => o.isSelected())\n                .reduce((acc,cur) => acc && cur, true);\n    }\n\n    private areSomeSelected(): boolean {\n        return this.options\n                .map((o) => o.isSelected())\n                .reduce((acc,cur) => acc || cur, false);\n    }\n\n    private areOnlyDeselectedAlsoDisabled(): boolean {\n        return this.options\n                .filter((o) => !o.isSelected())\n                .map((o) => o.isDisabled())\n                .reduce((acc,cur) => acc && cur, true);\n    }\n\n    private areAllDisabled(): boolean {\n        return this.options\n                .map((o) => o.isDisabled())\n                .reduce((acc,cur) => acc && cur, true);\n    }\n\n    private isEnablingAndDisablingPermitted(): boolean {\n        return this.allowEnablingAndDisabling;\n    }\n\n    public getRootElement(): HTMLElement {\n        return this.div;\n    }\n\n    public hasOption(value: string): boolean {\n        return this.getOption(value) !== NULL_OPTION;\n    }\n\n    private getOption(value: string): Option {\n        for (const o of this.options) {\n            if (o.getValue() == value) {\n                return o;\n            }\n        }\n        return NULL_OPTION;\n    }\n\n    public selectOption(value: string): void {\n        if (this.isDisabled()) return;\n        this.getOption(value).select();\n    }\n\n    public deselectOption(value: string): void {\n        if (this.isDisabled()) return;\n        this.getOption(value).deselect();\n    }\n\n    public isOptionSelected(value: string): boolean {\n        return this.getOption(value).isSelected();\n    }\n\n    public enableOption(value: string): void {\n        if (!this.isEnablingAndDisablingPermitted()) return;\n        this.getOption(value).enable();\n    }\n\n    public disableOption(value: string): void {\n        if (!this.isEnablingAndDisablingPermitted()) return;\n        this.getOption(value).disable();\n    }\n\n    public isOptionDisabled(value: string): boolean {\n        return this.getOption(value).isDisabled();\n    }\n\n    public disable(): void {\n        if (!this.isEnablingAndDisablingPermitted()) return;\n        this.disableNoPermissionCheck();\n    }\n\n    private disableNoPermissionCheck(): void {\n        this.options.forEach((o) => this.setBadgeDisabled(o));\n        this.disabled = true;\n        this.div.classList.add('disabled');\n        this.viewBar.classList.remove('dropdown-toggle');\n        this.closeDropdown();\n    }\n\n    private setBadgeDisabled(o: Option):void {\n        o.getSelectedItemBadge().classList.add('disabled');\n    }\n\n    public enable(): void {\n        if (!this.isEnablingAndDisablingPermitted()) return;\n        this.options.forEach((o) => {\n            if (!o.isDisabled()) {\n                this.setBadgeEnabled(o);\n            }\n        });\n        this.disabled = false;\n        this.div.classList.remove('disabled');\n        this.setTabIndex(); \n        this.viewBar.classList.add('dropdown-toggle');\n    }\n\n    private setBadgeEnabled(o: Option):void {\n        o.getSelectedItemBadge().classList.remove('disabled');\n    }\n\n    public isDisabled(): boolean {\n        return this.disabled;\n    }\n\n    public selectAll(): void {\n        if (this.isDisabled()) return;\n        this.selectAllOption.select();\n    }\n\n    public deselectAll(): void {\n        if (this.isDisabled()) return;\n        this.selectAllOption.deselect();\n    }\n\n    private getSelectedOptions(includeDisabled = true): Array<Option> {\n        let a = this.options;\n        if (!includeDisabled) {\n            if (this.isDisabled()) {\n                return new Array();\n            }\n            a = a.filter((o) => !o.isDisabled());\n        }\n        a = a.filter((o) => o.isSelected());\n        return a;\n    }\n\n    private getNoSelectedOptions(includeDisabled = true): Array<Option> {\n        let a = this.options;\n        if (!includeDisabled) {\n            if (this.isDisabled()) {\n                return new Array();\n            }\n            a = a.filter((o) => !o.isDisabled());\n        }\n        a = a.filter((o) => !o.isSelected());\n        return a;\n    }\n\n    public getSelectedOptionsAsJson(includeDisabled = true): string {\n        const data: any = {};\n        let a: Array<string> = this.getSelectedOptions(includeDisabled).map((o) => o.getValue());\n        data[this.getName()] = a;\n        let c = JSON.stringify(data, null, \"  \");\n        if (DEBUG) {\n            console.log(c);\n        }\n        return c;\n    }\n\n    public getNoSelectedOptionsAsJson(includeDisabled = true): string {\n        const data: any = {};\n        let a: Array<string> = this.getNoSelectedOptions(includeDisabled).map((o) => o.getValue());\n        data[this.getName()] = a;\n        let c = JSON.stringify(data, null, \"  \");\n        if (DEBUG) {\n            console.log(c);\n        }\n        return c;\n    }\n\n    public deleteOption(value: string): boolean{\n        if (this.isDisabled()) return false;\n        let o = this.getOption(value);\n        if (!o || o.isDisabled())return false;\n        \n        const index = this.options.indexOf(o);\n        if (index > -1) {\n            this.options.splice(index, 1);\n        }\n        o.deselect();\n        o.delete();\n        return true;\n    }\n\n    public isSearch(){\n        this.isSearchBox = true;\n    }\n\n    public addOption(value: string, label: string): boolean{\n        FilterMultiSelect.checkValue(value, label);\n        if (this.hasOption(value)) return false;\n        let newOp = new FilterMultiSelect.SingleOption(this, this.lastId, this.name, label, value, false, false);\n        this.lastId++;\n        newOp.initialize();\n        this.options.push(newOp);\n        newOp.initialize();\n        newOp.hide();\n        this.items.append(newOp.getListItem());\n        return true;\n    }\n\n    public setFilterFunction(value: Function): void{\n        this.lazyLoadingFunction = value;\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n\n    private dispatchSelectedEvent(option: Option): void {\n        this.dispatchEvent(\n            FilterMultiSelect.EventType.SELECTED,\n            option.getValue(),\n            option.getLabel());\n    }\n\n    private dispatchDeselectedEvent(option: Option): void {\n        this.dispatchEvent(\n            FilterMultiSelect.EventType.DESELECTED,\n            option.getValue(),\n            option.getLabel());\n    }\n\n    private dispatchEvent(eventType: string, value: string, label: string): void {\n        let event: CustomEvent = FilterMultiSelect.createEvent(eventType, this.getName(), value, label);\n        this.viewBar.dispatchEvent(event);\n    }\n\n    private canSelect(): boolean {\n        return this.numSelectedItems < this.maxNumSelectedItems;\n    }\n\n    private updateSelectionCounter(): void {\n        this.selectionCounter.textContent = this.numSelectedItems + \"/\" + this.maxNumSelectedItems;\n    }\n}","/*! \n *  Multiple select dropdown with filter jQuery plugin.\n *  Copyright (C) 2022  Andrew Wagner  github.com/andreww1011\n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n * \n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n * \n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n *  USA\n */\nimport $ from 'jquery';\nimport FilterMultiSelect from './FilterMultiSelect';\n\n// define the plugin function on the jQuery extension point.\n($.fn as any).filterMultiSelect = function (this: JQuery, args: Args): any {\n    let target = this;\n    // merge the global options with the per-call options.\n    args = $.extend({}, ($.fn as any).filterMultiSelect.args, args);\n\n    // factory defaults\n    if (typeof args.placeholderText === 'undefined') args.placeholderText = 'nothing selected';\n    if (typeof args.filterText === 'undefined') args.filterText = 'Filter';\n    if (typeof args.selectAllText === 'undefined') args.selectAllText = 'Select All';\n    if (typeof args.labelText === 'undefined') args.labelText = '';\n    if (typeof args.selectionLimit === 'undefined') args.selectionLimit = 0;\n    if (typeof args.caseSensitive === 'undefined') args.caseSensitive = false;\n    if (typeof args.allowEnablingAndDisabling === 'undefined') args.allowEnablingAndDisabling = true;\n    if (typeof args.items === 'undefined') args.items = new Array();\n    \n\n    let filterMultiSelect = new FilterMultiSelect(target, args);\n    \n    const fms = $(filterMultiSelect.getRootElement());\n    target.replaceWith(fms);\n    \n    var methods = {\n        hasOption: function(value: string):boolean {\n            return filterMultiSelect.hasOption(value);\n        },\n        addOption: function(label: string, value: string):boolean {\n            return filterMultiSelect.addOption(value, label);\n        },\n        setFilterFunction : function(value: Function):void {\n            return filterMultiSelect.setFilterFunction(value);\n        },\n        filtrar: function(text: string):void {\n            return filterMultiSelect.filtrar(text);\n        },\n        isSearch: function():void {\n            return filterMultiSelect.isSearch();\n        },\n        selectOption: function(value: string):void {\n            filterMultiSelect.selectOption(value);\n        },\n        deselectOption: function(value: string):void {\n            filterMultiSelect.deselectOption(value);\n        },\n        isOptionSelected: function(value: string):boolean {\n            return filterMultiSelect.isOptionSelected(value);\n        },\n        enableOption: function(value: string):void {\n            filterMultiSelect.enableOption(value);\n        },\n        disableOption: function(value: string):void {\n            filterMultiSelect.disableOption(value);\n        },\n        isOptionDisabled: function(value: string):boolean {\n            return filterMultiSelect.isOptionDisabled(value);\n        },\n        enable: function():void {\n            filterMultiSelect.enable();\n        },\n        disable: function():void {\n            filterMultiSelect.disable();\n        },\n        selectAll: function():void {\n            filterMultiSelect.selectAll();\n        },\n        deselectAll: function():void {\n            filterMultiSelect.deselectAll();\n        },\n        getSelectedOptionsAsJson: function(includeDisabled = true):string {\n            return filterMultiSelect.getSelectedOptionsAsJson(includeDisabled);\n        }\n    };\n\n    // store applied element\n    ($.fn as any).filterMultiSelect.applied.push(methods);\n\n    return filterMultiSelect;\n};\n\n// activate plugin by targeting selector\n$(function () {\n    // factory defaults\n    let selector: string = typeof ($.fn as any).filterMultiSelect.selector === 'undefined' ? 'select.filter-multi-select' : ($.fn as any).filterMultiSelect.selector;\n    // target\n    let s: JQuery<HTMLElement> = $(selector);\n    s.each((i,e) => {\n        ($(e) as any).filterMultiSelect();\n    });\n});\n\n// store collection of applied elements\n($.fn as any).filterMultiSelect.applied = new Array();\n\n// define the plugin's global default selector.\n($.fn as any).filterMultiSelect.selector = undefined;\n\n($.fn as any).filterMultiSelect.multiSelector = undefined;\n\n// define the plugin's global default options.\n($.fn as any).filterMultiSelect.args = {};"],"names":["class_1","selectTarget","args","e","key","stopPropagation","_this","closeDropdown","preventDefault","decrementItemFocus","focusItem","incrementItemFocus","refocusFilter","div","target","contains","dispatchEvent","MouseEvent","t","get","HTMLSelectElement","Error","select","name","array","find","toArray","options","FilterMultiSelect","createOptions","items","lastId","length","lastLoadedAmount","maxLazyLoadedAmount","maxNumSelectedItems","multiple","selectionLimit","parseInt","getAttribute","restrictSelection","numOptions","Math","max","selectAllOption","RestrictedSelectAllOption","selectAllText","UnrestrictedSelectAllOption","filterInput","document","createElement","type","filterText","clearButton","innerHTML","filter","append","getListItem","forEach","o","skeleton","className","hidden","dropDown","placeholder","textContent","placeholderText","selectedItems","label","labelText","customLabel","selectionCounter","viewBar","id","caseSensitive","disabled","allowEnablingAndDisabling","showing","Array","itemFocus","isSearchBox","initialize","fms","htmlOptions","jsOptions","htmloptions","map","i","checkValue","value","SingleOption","defaultSelected","j","jsoptions","selected","counts","opts","v","undefined","getValue","getLabel","n","l","event","CustomEvent","detail","bubbles","cancelable","composed","skeletonLines","skeletonLine","tabIndex","toString","setAttribute","isDisabled","disableNoPermissionCheck","attachDropdownListeners","attachViewbarListeners","m","addEventListener","stopImmediatePropagation","updateDropdownList","numShown","isSelected","deselect","clearFilterAndRefocus","text","selector","data","isOptionSelected","deleteOption","setLastLoadedAmount","addOption","Valor","Label","filtrar","oldText","lazyLoadingFunction","texto","itensPorLoad","onFiltro","shouldFilter","toLowerCase","indexOf","show","push","hide","setLoaded","setLoading","setTimeout","filtrarAsync","style","width","random","focus","isClosed","openDropdown","classList","removeEventListener","documentKeydownListener","documentClickListener","remove","setTabIndex","fmsMousedownListener","fmsFocusListener","isHidden","add","option","numSelectedItems","$","getSelectedItemBadge","children","areAllSelected","markSelectAll","areSomeSelected","areOnlyDeselectedAlsoDisabled","markSelectAllNotDisabled","markSelectPartial","markDeselect","areAllDisabled","disable","enable","canSelect","deactivate","activate","updateSelectionCounter","reduce","acc","cur","getOption","NULL_OPTION","_a","_i","isEnablingAndDisablingPermitted","setBadgeDisabled","row","checked","checkbox","nchbx","labelFor","htmlFor","closeButton","selectedItemBadge","active","class_2","initiallyChecked","selectNoDisabledCheck","setDisabledViewState","update","queueOption","dispatchSelectedEvent","unqueueOption","dispatchDeselectedEvent","setEnabledViewState","__extends","_super","indeterminate","class_3","usao","class_4","SELECTED","DESELECTED","filterMultiSelect","extend","fn","getRootElement","replaceWith","methods","hasOption","setFilterFunction","isSearch","selectOption","deselectOption","enableOption","disableOption","isOptionDisabled","selectAll","deselectAll","includeDisabled","getSelectedOptionsAsJson","applied","s","each"],"mappings":"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"}